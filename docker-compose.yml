# Définit les conteneurs à déployer
services:

  # Interface web de gestion Docker
  portainer:
    # Image Docker à utiliser
    image: portainer/portainer-ce:alpine
    # Nom personnalisé du conteneur
    container_name: portainer
    # Redémarre sauf si arrêté manuellement
    restart: unless-stopped
    # Réseau(s) auquel le conteneur appartient
    networks:
      - cloud
    # Redirige les ports hôte vers le conteneur
    ports:
      - 9000:9000
    # Monte des répertoires ou fichiers dans le conteneur
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    # Ajoute des métadonnées, souvent pour Traefik
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.portainer.rule=Host(`portainer.${MY_DOMAIN}`)'
      - 'traefik.http.routers.portainer.entryPoints=websecure'
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
    # Définit des variables d’environnement
    environment:
      - TZ=America/Montreal

  # Base de données pour Nextcloud
  nextclouddb:
    image: mariadb
    container_name: nextcloud-db
    restart: unless-stopped
    # Commandes spécifiques au démarrage
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    networks:
      - cloud
    volumes:
      - nextclouddb:/var/lib/mysql
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Montreal
      - MYSQL_RANDOM_ROOT_PASSWORD=true
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USER}

  # Application Nextcloud (cloud personnel)
  nextcloud:
    image: nextcloud
    container_name: nextcloud
    restart: unless-stopped
    networks:
      - cloud
    # Démarre après la base de données
    depends_on:
      - nextclouddb
    ports:
      - 8081:80
    volumes:
      - /local/nextcloud:/var/www/html
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Montreal
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USER}
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.nextcloud.rule=Host(`nextcloud.${MY_DOMAIN}`)'
      - 'traefik.http.routers.nextcloud.entryPoints=websecure'

  # Serveur multimédia Jellyfin
  jellyfin:
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    restart: unless-stopped
    networks:
      - cloud
    ports:
      - 8096:8096
    environment:
      - TZ=America/Montreal
    volumes:
      - jellyfin_data:/config
      - /mnt/media/Movies:/movies
      - /mnt/media/TV:/tv
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.jellyfin.rule=Host(`jellyfin.${MY_DOMAIN}`)'
      - 'traefik.http.routers.jellyfin.entryPoints=websecure'

  # Reverse proxy Traefik
  proxy:
    image: traefik
    container_name: traefik
    restart: unless-stopped
    networks:
      - cloud
    # Options de configuration en ligne de commande
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=duckdns"
      - "--certificatesresolvers.letsencrypt.acme.email=mail@mail.com"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.disablePropagationCheck=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.websecure.http.tls.certResolver=letsencrypt"
      - "--entrypoints.websecure.http.tls.domains[0].main=${MY_DOMAIN}"
      - "--entrypoints.websecure.http.tls.domains[0].sans=*.${MY_DOMAIN}"
    volumes:
      - "../data/traefik/letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.rule=Host(`${MY_DOMAIN}`)'
      - 'traefik.http.routers.api.entryPoints=websecure'
      - 'traefik.http.routers.api.service=api@internal'
    ports:
      - "443:443"
      - "80:80"
    environment:
      - "DUCKDNS_TOKEN=${DUCKDNS_TOKEN}"

# Définit les volumes Docker persistants
volumes:
  portainer_data:
  nextclouddb:
  jellyfin_data:

# Définit les réseaux Docker
networks:
  cloud:
    # Utilise le réseau bridge (par défaut)
    driver: bridge
